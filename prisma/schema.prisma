generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], name: "userId")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  clients       Client[]
  appointments  Appointment[]
}

model Client {
  id            String        @id @default(cuid())
  userId        String
  name          String
  phoneNumber   String
  email         String?
  budget        Int?
  preApproved   Boolean?
  occupation    String?
  maritalStatus String?
  children      Int?
  notes         String?
  notesPriority Boolean?
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  Appointment   Appointment[]
}

model Appointment {
  id        String  @id @default(cuid())
  userId    String
  name      String
  address   String
  type      String
  time      String
  date      String
  completed Boolean
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  Client    Client? @relation(fields: [clientId], references: [id])
  clientId  String?
}
